name: CI

on:
  - push

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: cache node modules
        uses: actions/cache@v2
        with:
          path: stepfn-dev/node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}

      - run: yarn
        working-directory: stepfn-dev

      - run: yarn build
        working-directory: stepfn-dev
        env:
          CI: false # otherwise warnings are treated as errors

      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: cache go
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-modbuild-${{ hashFiles('**/go.sum') }}

      - name: go build
        working-directory: stepfn-dev
        run: go build -ldflags="-s -w"

      - name: deploy
        uses: docker://glassechidna/stackit
        if: github.ref == 'refs/heads/main'
        with:
          args: stackit up --stack-name stepfn-dev-frontend --template frontend.stack.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: cache go
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-modbuild-${{ hashFiles('**/go.sum') }}

      - name: build execjs
        run: docker run -it -v $(pwd):$(pwd) -w $(pwd) ghcr.io/stepfn-dev/stepfn:execjs-build-env sh -c 'cd execjs && go build && mv execjs bootstrap'
#        uses: docker://ghcr.io/stepfn-dev/stepfn:execjs-build-env
#        env:
#          CGO_ENABLED: 1
#        with:
#          args: cd execjs && go build && mv execjs bootstrap

      - name: go build
        run: |
          set -eux
          (cd initializer; go build; mv initializer bootstrap)
          (cd get; go build; mv get bootstrap)
        env:
          GOFLAGS: -trimpath -ldflags=-w

      - name: deploy
        uses: docker://glassechidna/stackit
        if: github.ref == 'refs/heads/main'
        with:
          args: stackit up --stack-name stepfn-dev --template stack.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
